// Include necessary libraries
#include <WiFi.h>
#include <PubSubClient.h>  // For MQTT
#include <Wire.h>

// WiFi credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

// MQTT Broker details
const char* mqtt_server = "broker.hivemq.com";
const char* topic = "water/monitor";
WiFiClient espClient;
PubSubClient client(espClient);

// Sensor Pins
#define LEVEL_SENSOR_PIN 34
#define PH_SENSOR_PIN 35
#define TURBIDITY_SENSOR_PIN 32
#define TEMP_SENSOR_PIN 33
#define PUMP_RELAY_PIN 26

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }
    Serial.println("\nWiFi connected");
    
    client.setServer(mqtt_server, 1883);
    reconnect();
    
    pinMode(PUMP_RELAY_PIN, OUTPUT);
    digitalWrite(PUMP_RELAY_PIN, HIGH);  // Turn off pump initially
}

void loop() {
    if (!client.connected()) {
        reconnect();
    }
    client.loop();
    
    float waterLevel = analogRead(LEVEL_SENSOR_PIN);
    float pH = analogRead(PH_SENSOR_PIN) * (14.0 / 4095.0);
    float turbidity = analogRead(TURBIDITY_SENSOR_PIN) * (100.0 / 4095.0);
    float temperature = analogRead(TEMP_SENSOR_PIN) * (50.0 / 4095.0);
    
    Serial.printf("Water Level: %.2f, pH: %.2f, Turbidity: %.2f, Temperature: %.2f\n", 
                  waterLevel, pH, turbidity, temperature);
    
    String payload = "{";
    payload += "\"level\": " + String(waterLevel) + ", ";
    payload += "\"pH\": " + String(pH) + ", ";
    payload += "\"turbidity\": " + String(turbidity) + ", ";
    payload += "\"temperature\": " + String(temperature) + "}";
    
    client.publish(topic, payload.c_str());
    
    if (waterLevel < 500 || pH < 6.5 || pH > 8.5 || turbidity > 50) {
        digitalWrite(PUMP_RELAY_PIN, HIGH); // Turn off pump
    } else {
        digitalWrite(PUMP_RELAY_PIN, LOW);  // Turn on pump
    }
    
    delay(5000);
}

void reconnect() {
    while (!client.connected()) {
        Serial.print("Attempting MQTT connection...");
        if (client.connect("ESP32Client")) {
            Serial.println("connected");
            client.subscribe(topic);
        } else {
            Serial.print("failed, rc=");
            Serial.print(client.state());
            Serial.println(" try again in 5 seconds");
            delay(5000);
        }
    }
}
